@model NetworkGraph.Models.WorkspaceInfo





<!-- <script type="text/javascript" src="/scripts/cytoscape.js"></script> -->
<script src="https://cdn.rawgit.com/cytoscape/cytoscape.js-cose-bilkent/1.6.1/cytoscape-cose-bilkent.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
<script type="text/javascript" src="/scripts/app.js"></script>


<style>
    
</style>


    <div id="mySidenav" class="sidenav">
        <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>


        <div id="control-pane">

            <!--
            <div>
                
                <h3>Zoom <span id="min-degree-val">100%</span></h3>
                <span>-5</span> <span> <input id="min-degree" type="range" min="-5" max="5" value="0" oninput="alert(this.value)" style="display:inline"></span> +5 <br>
                    
            </div>
                -->

            <span class="line"></span>
            <p></p>

            <h3>Main Options</h3>
            <div>
                <div class="dropdown" style="display:inline-block;">

                    <button class="btn btn-primary dropdown-toggle" type="button" id="depthMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                        Graph Depth
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                        <li><a href="#" onclick="setDepth(1.0)">One Level</a></li>
                        <li><a href="#" onclick="setDepth(1.5)">One Level with Interconnections</a></li>
                        <li><a href="#" onclick="setDepth(2.0)">Two Levels</a></li>
                    </ul>
                </div>

                <div class="dropdown" style="display:inline-block;">

                    <button class="btn btn-primary dropdown-toggle" type="button" id="tableMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                        Table Type
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
                        <li><a href="#" onclick="setupTable('senders'); populateSenderTable2();">Top Senders</a></li>
                        <li><a href="#" onclick="setupTable('recipients'); populateRecipientTable2();">Top Recipients</a></li>
                        <li><a href="#" onclick="setupTable('sendersAndRecipients'); populatePairTable2();">Top Sender &#x27FA; Recipient Pairs</a></li>
                    </ul>

                </div>

                <div class="dropdown" style="display:inline-block;">

                    <button class="btn btn-primary dropdown-toggle" type="button" id="tableMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                        Maximum Participants
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
                        <li><a href="#" onclick="setMaximumParticipants(2000000000);">Unlimited</a></li>
                        <li><a href="#" onclick="setMaximumParticipants(1);">1</a></li>
                        <li><a href="#" onclick="setMaximumParticipants(2);">2</a></li>
                        <li><a href="#" onclick="setMaximumParticipants(5);">5</a></li>
                    </ul>

                </div>

                <div class="dropdown" style="display:inline-block;">

                    <button class="btn btn-primary dropdown-toggle" type="button" id="tableMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                        Geometry
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
                        <li><a href="#" onclick="setCytoscapeStyle('concentricNoOverlap');">Concentric - No Overlap</a></li>
                        <li><a href="#" onclick="setCytoscapeStyle('concentricWithOverlap');">Concentric</a></li>
                        <li><a href="#" onclick="setCytoscapeStyle('grid');">Grid</a></li>
                        <li><a href="#" onclick="setCytoscapeStyle('spread');">Spread</a></li>
                        <li><a href="#" onclick="setCytoscapeStyle('cose');">CoSE</a></li>
                        <li><a href="#" onclick="setCytoscapeStyle('cose-bilkent');">CoSE-Bilkent</a></li>
                    </ul>

                </div>



            </div>



            <div>

                
                <h3 id="ParticipantTableTitle">Top Senders</h3>
                
                <table class="table" id="senderRecipientsTable">
                    <thead>
                        <tr id="participantHeader">
                            <th>Sender</th>
                            <th>Recipient</th>
                            <th>Count</th>
                        </tr>
                    </thead>
                    <tbody id="senderRecipientsTableBody">

                    </tbody>
                </table>
                
            </div>

            <p></p>

            <div>
                <h3>Saved Search</h3>
                <select id="savedSearchDropdown" name="cars" onchange="console.log(this.value); setSavedSearch(this.value)" style="font-size:18px;">
                    <!--<option value="volvo">Volvo</option>-->
                </select>
                <!-- <button type="button" class="btn btn-default" onclick="runSavedSearch()">Execute</button> -->
            </div>

            <div>
                <h3>Developer Utilities</h3>
                <button type="button" class="btn btn-danger" onclick="location.href='@Url.Action("GetSavedSearches", "Home", new { Levels = 2, EntityID =  @Model.RootCommunicator, WorkspaceArtifactID = Model.ArtifactID, WorkspaceServerName = @Model.WorkspaceServerName, @SocialNetworkDatabaseName = @Model.SocialNetworkDatabaseName })'">getJson</button>
            </div>

            <div>
                <!-- <h3>Case: @Model.CaseName</h3> -->
                <!-- <h3>Root Communicator: @Model.RootCommunicator.ToString()</h3> -->
                <!-- <h3>ViewBag: @ViewBag.Message</h3> -->
            </div>


            <div id="dump" class="hidden"></div>
        </div>









    </div>




    <div id='wrapper'>
        <div id='threes'>
            <span style="font-size:30px;cursor:pointer;display:inline" onclick="openNav()">&#9776;</span>
            <span style="font-size:30px;cursor:pointer;display:inline" onclick="toggleTop()">&#9777;</span>
            <span style="font-size:30px;cursor:pointer;display:inline" onclick="toggleRelativity()">&#9778;</span>
        </div>

        <div id='status'>
            Events Here
        </div>
        <div id='cy'>

        </div>
    </div>

    <script>

                var MyAppUrlSettings = {
                    GetGraphGeneration10: '@Url.Action("GetGraphGeneration10","Home")',
                    GetGraphGeneration15: '@Url.Action("GetGraphGeneration15", "Home")',
                    GetGraphGeneration20: '@Url.Action("GetGraphGeneration20", "Home")',
                    GetGraphGeneration10Case: '@Url.Action("GetGraphGeneration10Case","Home")',
                    GetGraphGeneration15Case: '@Url.Action("GetGraphGeneration15Case", "Home")',
                    GetGraphGeneration20Case: '@Url.Action("GetGraphGeneration20Case", "Home")',
                    GetGraphGeneration10Filter: '@Url.Action("GetGraphGeneration10Filter", "Home")',
                    GetGraphGeneration15Filter: '@Url.Action("GetGraphGeneration15Filter", "Home")',
                    GetGraphGeneration20Filter: '@Url.Action("GetGraphGeneration20Filter", "Home")',
                    EdgeClicked1URL: '@Url.Action("EdgeClicked1", "Home")',
                    GetSavedSearches: '@Url.Action("GetSavedSearches", "Home")',
                    //RunSavedSearch: '@Url.Action("RunSavedSearch", "Home")',
                    //RunSavedSearchFilterByParticipants: '@Url.Action("RunSavedSearchFilterByParticipants", "Home")',
                    workspaceInfo: @Html.Raw(Json.Encode(@Model)),
                    socialNetworkDatabaseName: '@Model.SocialNetworkDatabaseName',
                    workspaceArtifactID: '@Model.ArtifactID',
                    workspaceServerName: '@Model.WorkspaceServerName',
                    RootCommunicator: '@Model.RootCommunicator',
                    SelectedValue: 'xxx',
                    Depth: 1,
                    currentTableType: 'sender',
                    maximumParticipants: 2000000000,
                    savedSearch: -1,
                    senderEntityID: -1,
                    recipientEntityID: -1

                } // Not really an error.

                function openNav() {
                    document.getElementById("mySidenav").style.width = "500px";
                    document.getElementById("wrapper").style.marginLeft = "500px";
                    document.getElementById("mySidenav").style.overflow = 'auto';
                    document.getElementById("threes").style.visibility = "hidden";
                    document.getElementById("status").style.visibility = "hidden";
                }

                function closeNav() {
                    document.getElementById("mySidenav").style.width = "0";
                    document.getElementById("wrapper").style.marginLeft = "0";
                    document.getElementById("mySidenav").style.overflow = 'hidden';
                    document.getElementById("threes").style.visibility = "visible";
                    document.getElementById("status").style.visibility = "visible";
                }

                function toggleTop() {

                    if (document.getElementsByClassName("navbar")[0].style.display == "none")
                    {
                        document.getElementsByClassName("navbar")[0].style.display = "block";
                        document.getElementById("wrapper").style.height = "0%";
                        setupGraph();
                    }
                    else
                    {
                        document.getElementsByClassName("navbar")[0].style.display = "none"
                        document.getElementById("wrapper").style.height = "100%";
                        //document.getElementById("tall").style.height = "100%";
                        setupGraph();
                    }



                    //document.getElementsByClassName("navbar")[0].style.height = "0px";
                }

                function toggleRelativity() {

                    if ($(window.top.document.getElementById('_headerOuterTableRow')).is(":visible") == true)
                    {
                        $(window.top.document.getElementById('_headerOuterTableRow')).hide();

                        var inside = window.top.document.getElementById('_externalPage');
                        if (!(inside == null) && !(typeof inside === "undefined"))
                        {
                            $(inside).height($(inside).height() + 84);
                        }

                        setupGraph();
                    }
                    else
                    {
                        $(window.top.document.getElementById('_headerOuterTableRow')).show();


                        var inside = window.top.document.getElementById('_externalPage');
                        if (!(inside == null) && !(typeof inside === "undefined"))
                        {
                            $(inside).height($(inside).height() - 84);
                        }


                        setupGraph();
                    }



                    //document.getElementsByClassName("navbar")[0].style.height = "0px";
                }



                //Register a listener for the end of the transition of wrapper.
                (function () {
                    var e = document.getElementById('wrapper');

                    function whichTransitionEvent() {
                        var t;
                        var el = document.createElement('fakeelement');
                        var transitions = {
                            'transition': 'transitionend',
                            'OTransition': 'oTransitionEnd',
                            'MozTransition': 'transitionend',
                            'WebkitTransition': 'webkitTransitionEnd'
                        }

                        for (t in transitions) {
                            if (el.style[t] !== undefined) {
                                return transitions[t];
                            }
                        }
                    }

                    var transitionEvent = whichTransitionEvent();
                    transitionEvent && e.addEventListener(transitionEvent, function () {
                        //alert('Transition complete!  This is the callback, no library needed!');
                        setupGraph();
                    });

                    startFade = function () {
                        e.className += ' hide';
                    }
                })();


                window.addEventListener("resize", resizeWindow);

                function resizeWindow()
                {
                    setupGraph();
                }



    </script>






